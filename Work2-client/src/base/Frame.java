/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package base;

import java.rmi.Naming;
import java.rmi.RemoteException;
import javax.swing.JOptionPane;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import operation.Operation;
import types.*;

/**
 *
 * @author Nikolay
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }
    
    static Operation Operations = null;
    static DefaultTableModel model = new DefaultTableModel()
    {
        @Override
        public boolean isCellEditable(int i, int i1) 
        {
        return false;
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        add1 = new javax.swing.JDialog();
        lb2 = new javax.swing.JLabel();
        lb3 = new javax.swing.JLabel();
        lb4 = new javax.swing.JLabel();
        lb5 = new javax.swing.JLabel();
        lb6 = new javax.swing.JLabel();
        lb7 = new javax.swing.JLabel();
        txt3 = new javax.swing.JComboBox();
        txt4 = new javax.swing.JComboBox();
        txt5 = new javax.swing.JComboBox();
        txt6 = new javax.swing.JComboBox();
        txt1 = new javax.swing.JTextField();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        txt2 = new javax.swing.JTextField();
        lb9 = new java.awt.Label();
        lb10 = new java.awt.Label();
        sp1 = new javax.swing.JSpinner();
        lbprice = new java.awt.Label();
        scb1 = new javax.swing.JScrollBar();
        error1 = new javax.swing.JLabel();
        add2 = new javax.swing.JDialog();
        lb01 = new javax.swing.JLabel();
        lb02 = new javax.swing.JLabel();
        lb03 = new javax.swing.JLabel();
        lb04 = new javax.swing.JLabel();
        txt02 = new javax.swing.JTextField();
        txt03 = new javax.swing.JTextField();
        txt04 = new javax.swing.JTextField();
        btn10 = new javax.swing.JButton();
        btn11 = new javax.swing.JButton();
        txt01 = new javax.swing.JTextField();
        error2 = new javax.swing.JLabel();
        lb1 = new javax.swing.JLabel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        lb8 = new javax.swing.JLabel();
        txtsum = new javax.swing.JTextField();
        btnsum = new javax.swing.JButton();

        add1.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        lb2.setText("ID");

        lb3.setText("Название");

        lb4.setText("Марка");

        lb5.setText("Акция");

        lb6.setText("Поставщик");

        lb7.setText("Гарантия");

        btn8.setText("Ок");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setText("Отмена");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        lb9.setText("Количество");

        lb10.setText("Цена");

        sp1.setModel(new javax.swing.SpinnerNumberModel(10, 1, 100, 1));

        lbprice.setText("100");

        scb1.setMaximum(10000);
        scb1.setMinimum(100);
        scb1.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        scb1.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                scb1AdjustmentValueChanged(evt);
            }
        });

        error1.setForeground(new java.awt.Color(255, 36, 0));

        javax.swing.GroupLayout add1Layout = new javax.swing.GroupLayout(add1.getContentPane());
        add1.getContentPane().setLayout(add1Layout);
        add1Layout.setHorizontalGroup(
            add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(add1Layout.createSequentialGroup()
                        .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(add1Layout.createSequentialGroup()
                                .addComponent(btn8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn9))
                            .addGroup(add1Layout.createSequentialGroup()
                                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb3)
                                    .addComponent(lb2))
                                .addGap(39, 39, 39)
                                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt2)
                                    .addComponent(txt1)))
                            .addGroup(add1Layout.createSequentialGroup()
                                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb7)
                                    .addComponent(lb6)
                                    .addComponent(lb5)
                                    .addComponent(lb4))
                                .addGap(18, 18, 18)
                                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt6, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt5, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt4, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(add1Layout.createSequentialGroup()
                                        .addComponent(sp1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 122, Short.MAX_VALUE))
                                    .addComponent(scb1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(add1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))
                    .addGroup(add1Layout.createSequentialGroup()
                        .addComponent(error1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        add1Layout.setVerticalGroup(
            add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb2)
                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb3)
                    .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb4)
                    .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb5)
                    .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb6)
                    .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb7))
                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(add1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(add1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(error1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn8)
                    .addComponent(btn9))
                .addGap(7, 7, 7))
        );

        lb01.setText("-");

        lb02.setText("-");

        lb03.setText("-");

        lb04.setText("-");

        btn10.setText("Ок");
        btn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ActionPerformed(evt);
            }
        });

        btn11.setText("Отмена");
        btn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn11ActionPerformed(evt);
            }
        });

        error2.setForeground(new java.awt.Color(255, 36, 0));

        javax.swing.GroupLayout add2Layout = new javax.swing.GroupLayout(add2.getContentPane());
        add2.getContentPane().setLayout(add2Layout);
        add2Layout.setHorizontalGroup(
            add2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(add2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(add2Layout.createSequentialGroup()
                        .addGroup(add2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn10)
                            .addComponent(lb01)
                            .addComponent(lb02)
                            .addComponent(lb03)
                            .addComponent(lb04))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addGroup(add2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt04)
                            .addComponent(txt03)
                            .addComponent(txt02)
                            .addComponent(txt01)
                            .addComponent(btn11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(error2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        add2Layout.setVerticalGroup(
            add2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(add2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb01)
                    .addComponent(txt01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb02)
                    .addComponent(txt02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb03)
                    .addComponent(txt03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb04)
                    .addComponent(txt04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(error2, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(add2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn10)
                    .addComponent(btn11))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lb1.setText("Каталоги");

        btn1.setText("Запчасти");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("Бренд");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText("Акции");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setText("Поставщики");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setText("Гарантия");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        Table.setModel(model);
        jScrollPane1.setViewportView(Table);

        btn6.setText("Добавить");
        btn6.setEnabled(false);
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setText("Удалить");
        btn7.setEnabled(false);
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        lb8.setText("Мартюшев Н.В.");

        btnsum.setText("Итог");
        btnsum.setEnabled(false);
        btnsum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn7)
                        .addGap(165, 165, 165)
                        .addComponent(lb8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnsum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtsum, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb1)
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn4)
                                .addGap(28, 28, 28)
                                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn3)
                                .addGap(18, 18, 18)
                                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 310, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb1)
                    .addComponent(btn2)
                    .addComponent(btn3)
                    .addComponent(btn4)
                    .addComponent(btn5)
                    .addComponent(btn1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn6)
                        .addComponent(btn7)
                        .addComponent(txtsum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnsum))
                    .addComponent(lb8)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int sw = 0;
    int add = 0;
    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        sw = 1;
        add = 1;
        btnsum.setEnabled(true);
        btn1.setEnabled(false);
        btn2.setEnabled(true);
        btn3.setEnabled(true);
        btn4.setEnabled(true);
        btn5.setEnabled(true);
        btn6.setEnabled(true);
        btn7.setEnabled(true);
        model.setRowCount (0);
        model.setColumnIdentifiers(new Object[]{"id", "Название", "Бренд", "Поставщик", "Гарантия", "Акция","Количество","Сумма"});
        try {
            doVivodA(Operations.getListA());
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        sw = 2;
        add = 2;
        btnsum.setEnabled(false);
        btn1.setEnabled(true);
        btn2.setEnabled(false);
        btn3.setEnabled(true);
        btn4.setEnabled(true);
        btn5.setEnabled(true);
        btn6.setEnabled(true);
        btn7.setEnabled(true);
        model.setRowCount (0);
        model.setColumnIdentifiers(new Object[]{"Имя", "Описание"});
        lb01.setText("Имя");
        lb02.setText("Описание");
        lb03.setText("");
        lb04.setText("");
        txt03.setVisible(false);
        txt04.setVisible(false);
        try {
            doVivodB(Operations.getListB());
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        sw = 3;
        add = 2;
        btnsum.setEnabled(false);
        btn1.setEnabled(true);
        btn2.setEnabled(true);
        btn3.setEnabled(false);
        btn4.setEnabled(true);
        btn5.setEnabled(true);
        btn6.setEnabled(true);
        btn7.setEnabled(true);
        model.setRowCount (0);
        model.setColumnIdentifiers(new Object[]{"Имя", "Дата начала)", "Длительность(в днях)", "Описание"});
        lb01.setText("Имя");
        lb02.setText("Дата начала(День.Месяц.Год)");
        lb03.setText("Длительность(в днях)");
        lb04.setText("Описание");
        txt03.setVisible(true);
        txt04.setVisible(true);
        try {
            doVivodP(Operations.getListP());
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        sw = 4;
        add = 2;
        btnsum.setEnabled(false);
        btn1.setEnabled(true);
        btn2.setEnabled(true);
        btn3.setEnabled(true);
        btn4.setEnabled(false);
        btn5.setEnabled(true);
        btn6.setEnabled(true);
        btn7.setEnabled(true);
        model.setRowCount (0);
        model.setColumnIdentifiers(new Object[]{"Имя", "Адрес", "Номер", "ИНН"});
        lb01.setText("Имя");
        lb02.setText("Адрес");
        lb03.setText("Номер");
        lb04.setText("ИНН");
        txt03.setVisible(true);
        txt04.setVisible(true);
        try {
            doVivodS(Operations.getListS());
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        // TODO add your handling code here:
        sw = 5;
        add = 2;
        btnsum.setEnabled(false);
        btn1.setEnabled(true);
        btn2.setEnabled(true);
        btn3.setEnabled(true);
        btn4.setEnabled(true);
        btn5.setEnabled(false);
        btn6.setEnabled(true);
        btn7.setEnabled(true);
        model.setRowCount (0);
        model.setColumnIdentifiers(new Object[]{"Тип", "Длительность (в месяцах)"});
        lb01.setText("Тип");
        lb02.setText("Длительность (в месяцах)");
        lb03.setText("");
        lb04.setText("");
        txt03.setVisible(false);
        txt04.setVisible(false);
        try {
            doVivodW(Operations.getListW());
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        // TODO add your handling code here:
        switch (add)
        {
            case 1:
            add1.setSize(400, 400);
        try {
            txt3.setModel(getColumnB(Operations.getListB()));
            txt4.setModel(getColumnP(Operations.getListP()));
            txt5.setModel(getColumnS(Operations.getListS()));
            txt6.setModel(getColumnW(Operations.getListW()));
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
            add1.setVisible(true);
            break;
            case 2:
            add2.setSize(400, 300);
            add2.setVisible(true);
            break;
        }
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        // TODO add your handling code here:
        add1.setVisible(false);
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        // TODO add your handling code here
        // обработка ошибок начало
        if(txt1.getText().length() == 0) 
        {
            error1.setText("Поле 'ID' пусто!");
            return;
        }
        if(isDigit(txt1.getText())== false)
        {
            error1.setText("Поле 'ID' содержит не число!");
            return;
        }
        if(txt2.getText().length() == 0) 
        {
            error1.setText("Поле 'Название' пусто!");
            return;
        }
        //обработка ошибок конец
        add1.setVisible(false);
        Zapchasty A;
        A = new Zapchasty(Integer.parseInt(txt1.getText()),txt2.getText(),txt3.getSelectedItem().toString(), txt4.getSelectedItem().toString(),txt5.getSelectedItem().toString(),txt6.getSelectedItem().toString(),(Integer)sp1.getValue(), scb1.getValue());
        doClearTable();
        try {
            doVivodA(Operations.addNewAutopart(A));
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        error1.setText("");
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn11ActionPerformed
        // TODO add your handling code here:
        add2.setVisible(false);
    }//GEN-LAST:event_btn11ActionPerformed

    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ActionPerformed
        // TODO add your handling code here:
                switch (sw)
        {
            case 2:
                // обработка ошибок начало
                if(txt01.getText().length() == 0|txt02.getText().length() == 0) 
                {
                    error2.setText("Не все поля заполнены!");
                    return;
                }
                //обработка ошибок конец
                Brands B;
                B = new Brands(txt01.getText(),txt02.getText());
                doClearTable();
        try {
            doVivodB(Operations.addNewBrand(B));
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
                break;
            case 3:
                // обработка ошибок начало
                if(txt01.getText().length() == 0|txt02.getText().length() == 0|txt03.getText().length() == 0|txt04.getText().length() == 0) 
                {
                    error2.setText("Не все поля заполнены!");
                    return;
                }
                if(isDate(txt02.getText())== false)
                {
                    error2.setText("Дата в неверном формате!");
                    return;  
                }
                if(isDigit(txt03.getText())== false)
                {
                    error2.setText("Поле 'Длительность' содержит не число!");
                    return;
                }
                //обработка ошибок конец
                Akcii P;
                P = new Akcii(txt01.getText(),txt02.getText(),Integer.parseInt(txt03.getText()),txt04.getText());
                doClearTable();
        try {
            doVivodP(Operations.addNewPromotion(P));
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
                break;
            case 4:
                // обработка ошибок начало
                if(txt01.getText().length() == 0|txt02.getText().length() == 0|txt03.getText().length() == 0|txt04.getText().length() == 0) 
                {
                    error2.setText("Не все поля заполнены!");
                    return;
                }
                if(isDigit(txt03.getText())== false)
                {
                    error2.setText("Поле 'Номер' содержит не число!");
                    return;
                }
                if(isDigitL(txt04.getText())== false|txt04.getText().length() != 12)
                {
                    error2.setText("Поле 'ИНН' содержит неверные данные!");
                    return;
                }
                //обработка ошибок конец
                Postavki S;
                S = new Postavki(txt01.getText(),txt02.getText(),Long.parseLong(txt03.getText()),Long.parseLong(txt04.getText()));
                doClearTable();
        try {
            doVivodS(Operations.addNewSupplier(S));
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
                break;
            case 5:
                // обработка ошибок начало
                if(txt01.getText().length() == 0|txt02.getText().length() == 0) 
                {
                    error2.setText("Не все поля заполнены!");
                    return;
                }
                if(isDigit(txt02.getText())== false)
                {
                    error2.setText("Поле 'Длительность' содержит не число!");
                    return;
                }
                //обработка ошибок конец
                Garantiya W;
                W = new Garantiya(txt01.getText(),Integer.parseInt(txt02.getText()));
                doClearTable();
        try {
            doVivodW(Operations.addNewWarranty(W));
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
                break;
        }
        add2.setVisible(false);
    }//GEN-LAST:event_btn10ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        // TODO add your handling code here:
        int[] SR = Table.getSelectedRows();
        int sr = SR[0];
        switch (sw){
            case 1:
                doClearTable();
                try {
                    doVivodA (Operations.remListA(sr));
                } catch (RemoteException ex) {
                    Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 2:
                doClearTable();
                try {
                    doVivodB (Operations.remListB(sr));
                } catch (RemoteException ex) {
                    Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 3:
                doClearTable();
                try {
                    doVivodP (Operations.remListP(sr));
                } catch (RemoteException ex) {
                    Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 4:
                doClearTable();
                try {
                    doVivodS (Operations.remListS(sr));
                } catch (RemoteException ex) {
                    Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 5:
                doClearTable();
                try {
                    doVivodW (Operations.remListW(sr));
                } catch (RemoteException ex) {
                    Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
        }
    }//GEN-LAST:event_btn7ActionPerformed

    private void scb1AdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_scb1AdjustmentValueChanged
        // TODO add your handling code here:
        lbprice.setText(Integer.toString((int)scb1.getValue()));
    }//GEN-LAST:event_scb1AdjustmentValueChanged

    private void btnsumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsumActionPerformed
        try {
            // TODO add your handling code here:
            txtsum.setText(Integer.toString(Operations.getSum()));
        } catch (RemoteException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnsumActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here: 
                try {
            Operations = (Operation)Naming.lookup("//localhost:1199/rmiTest02");
        } catch (Exception ex) {
            ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Не удалось установить соединение с сервером:" + ex.getMessage() + ".",
                "Ошибка",
                JOptionPane.ERROR_MESSAGE);
        }       

    }//GEN-LAST:event_formWindowOpened

    private void doVivodA(List<Zapchasty> lstA)
    {
        for (Zapchasty autoparts: lstA)
        {
            Object[] rowData = new Object[8];
            rowData[0] = autoparts.getId();
            rowData[1] = autoparts.getName();
            rowData[2] = autoparts.getBrand();
            rowData[3] = autoparts.getPromotion();
            rowData[4] = autoparts.getSupplie();
            rowData[5] = autoparts.getWarranty();
            rowData[6] = autoparts.getKol();
            rowData[7] = autoparts.getKol()*autoparts.getPrice();
            model.addRow(rowData);
        }
    }
    
    private void doVivodB(List<Brands> lstB)
    {
        for (Brands brands: lstB)
        {
            Object[] rowData = new Object[2];
            rowData[0] = brands.getName();
            rowData[1] = brands.getDescription();
            model.addRow(rowData);
        }
    }
        
    private void doVivodP(List<Akcii> lstP)
    {
        for (Akcii promotions: lstP)
        {
            Object[] rowData = new Object[4];
            rowData[0] = promotions.getName();
            rowData[1] = promotions.getData();
            rowData[2] = promotions.getDuration();
            rowData[3] = promotions.getEssence();
            model.addRow(rowData);
        }
    }
        
    private void doVivodS(List<Postavki> lstS)
    {
        for (Postavki suppliers: lstS)
        {
            Object[] rowData = new Object[4];
            rowData[0] = suppliers.getName();
            rowData[1] = suppliers.getAddress();
            rowData[2] = suppliers.getTelephone();
            rowData[3] = suppliers.getInn();
            model.addRow(rowData);
        }
    }
    
    private void doVivodW(List<Garantiya> lstW)
    {
        for (Garantiya warranty: lstW)
        {
            Object[] rowData = new Object[2];
            rowData[0] = warranty.getType();
            rowData[1] = warranty.getDuration();
            model.addRow(rowData);
        }
    }
    
    private void doClearTable(){
        while (model.getRowCount()>0){
            model.removeRow(0);
        }
    }
    
    private DefaultComboBoxModel getColumnB(List<Brands> lstB){
        DefaultComboBoxModel Cmodel = new DefaultComboBoxModel();
        for (Brands brands: lstB)
        {
           Cmodel.addElement(brands.getName()); 
        }
        return (Cmodel);
    }
    
    private DefaultComboBoxModel getColumnP(List<Akcii> lstP){
        DefaultComboBoxModel Cmodel = new DefaultComboBoxModel();
        for (Akcii promotions: lstP)
        {
           Cmodel.addElement(promotions.getName()); 
        }
        return (Cmodel);
    }
    
    private DefaultComboBoxModel getColumnS(List<Postavki> lstS){
        DefaultComboBoxModel Cmodel = new DefaultComboBoxModel();
        for (Postavki suppliers: lstS)
        {
           Cmodel.addElement(suppliers.getName()); 
        }
        return (Cmodel);
    }
    
    private DefaultComboBoxModel getColumnW(List<Garantiya> lstW){
        DefaultComboBoxModel Cmodel = new DefaultComboBoxModel();
        for (Garantiya warranty: lstW)
        {
           Cmodel.addElement(warranty.getType()); 
        }
        return (Cmodel);
    }
    
    private static boolean isDigit(String s) throws NumberFormatException {
    try 
        {
            Integer.parseInt(s);
            return true;
        } 
    catch (NumberFormatException e) 
        {
            return false;
        }
    }
    
    private static boolean isDigitL(String s) throws NumberFormatException {
    try 
        {
            Long.parseLong(s);
            return true;
        } 
    catch (NumberFormatException e) 
        {
            return false;
        }
    }
    
    public Boolean isDate(String d) 
        {
            	SimpleDateFormat formatter = new SimpleDateFormat("dd.MM.yyyy");
		formatter.setLenient (false);
		try 
		{
		  Date date = formatter.parse(d);
		  if (!formatter.format(date).equals(d))
			  return false;
		  
		 } 
		 catch (ParseException e) 
		 {
                   return false;
		 }
		return true;
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JDialog add1;
    private javax.swing.JDialog add2;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn11;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnsum;
    private javax.swing.JLabel error1;
    private javax.swing.JLabel error2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb01;
    private javax.swing.JLabel lb02;
    private javax.swing.JLabel lb03;
    private javax.swing.JLabel lb04;
    private javax.swing.JLabel lb1;
    private java.awt.Label lb10;
    private javax.swing.JLabel lb2;
    private javax.swing.JLabel lb3;
    private javax.swing.JLabel lb4;
    private javax.swing.JLabel lb5;
    private javax.swing.JLabel lb6;
    private javax.swing.JLabel lb7;
    private javax.swing.JLabel lb8;
    private java.awt.Label lb9;
    private java.awt.Label lbprice;
    private javax.swing.JScrollBar scb1;
    private javax.swing.JSpinner sp1;
    private javax.swing.JTextField txt01;
    private javax.swing.JTextField txt02;
    private javax.swing.JTextField txt03;
    private javax.swing.JTextField txt04;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt2;
    private javax.swing.JComboBox txt3;
    private javax.swing.JComboBox txt4;
    private javax.swing.JComboBox txt5;
    private javax.swing.JComboBox txt6;
    private javax.swing.JTextField txtsum;
    // End of variables declaration//GEN-END:variables
    
}
